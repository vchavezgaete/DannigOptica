
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ClienteScalarFieldEnum = {
  idCliente: 'idCliente',
  rut: 'rut',
  nombre: 'nombre',
  telefono: 'telefono',
  correo: 'correo',
  direccion: 'direccion',
  sector: 'sector',
  fechaCreacion: 'fechaCreacion',
  idVendedor: 'idVendedor'
};

exports.Prisma.OperativoScalarFieldEnum = {
  idOperativo: 'idOperativo',
  nombre: 'nombre',
  fecha: 'fecha',
  lugar: 'lugar',
  cupos: 'cupos'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  idUsuario: 'idUsuario',
  nombre: 'nombre',
  correo: 'correo',
  hashPassword: 'hashPassword',
  activo: 'activo'
};

exports.Prisma.RolScalarFieldEnum = {
  idRol: 'idRol',
  nombre: 'nombre'
};

exports.Prisma.UsuarioRolScalarFieldEnum = {
  idUsuario: 'idUsuario',
  idRol: 'idRol'
};

exports.Prisma.CitaScalarFieldEnum = {
  idCita: 'idCita',
  idCliente: 'idCliente',
  idOperativo: 'idOperativo',
  fechaHora: 'fechaHora',
  estado: 'estado'
};

exports.Prisma.FichaClinicaScalarFieldEnum = {
  idFicha: 'idFicha',
  idCita: 'idCita',
  antecedentesGenerales: 'antecedentesGenerales',
  antecedentesOftalmologicos: 'antecedentesOftalmologicos',
  observaciones: 'observaciones',
  fechaRegistro: 'fechaRegistro'
};

exports.Prisma.RecetaScalarFieldEnum = {
  idReceta: 'idReceta',
  idFicha: 'idFicha',
  odEsfera: 'odEsfera',
  odCilindro: 'odCilindro',
  odEje: 'odEje',
  oiEsfera: 'oiEsfera',
  oiCilindro: 'oiCilindro',
  oiEje: 'oiEje',
  adicion: 'adicion',
  pd: 'pd',
  vigenciaDias: 'vigenciaDias',
  fechaEmision: 'fechaEmision'
};

exports.Prisma.ProductoScalarFieldEnum = {
  idProducto: 'idProducto',
  codigo: 'codigo',
  nombre: 'nombre',
  precio: 'precio',
  tipo: 'tipo'
};

exports.Prisma.VentaScalarFieldEnum = {
  idVenta: 'idVenta',
  idCliente: 'idCliente',
  idReceta: 'idReceta',
  fechaVenta: 'fechaVenta',
  total: 'total'
};

exports.Prisma.ItemVentaScalarFieldEnum = {
  idItem: 'idItem',
  idVenta: 'idVenta',
  idProducto: 'idProducto',
  cantidad: 'cantidad',
  precioUnitario: 'precioUnitario'
};

exports.Prisma.GarantiaScalarFieldEnum = {
  idGarantia: 'idGarantia',
  idItem: 'idItem',
  fechaInicio: 'fechaInicio',
  fechaFin: 'fechaFin',
  condiciones: 'condiciones'
};

exports.Prisma.AlertaScalarFieldEnum = {
  idAlerta: 'idAlerta',
  idCliente: 'idCliente',
  tipo: 'tipo',
  canal: 'canal',
  mensaje: 'mensaje',
  fechaProgramada: 'fechaProgramada',
  enviado: 'enviado'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.ClienteOrderByRelevanceFieldEnum = {
  rut: 'rut',
  nombre: 'nombre',
  telefono: 'telefono',
  correo: 'correo',
  direccion: 'direccion',
  sector: 'sector'
};

exports.Prisma.OperativoOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  lugar: 'lugar'
};

exports.Prisma.UsuarioOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  correo: 'correo',
  hashPassword: 'hashPassword'
};

exports.Prisma.RolOrderByRelevanceFieldEnum = {
  nombre: 'nombre'
};

exports.Prisma.FichaClinicaOrderByRelevanceFieldEnum = {
  antecedentesGenerales: 'antecedentesGenerales',
  antecedentesOftalmologicos: 'antecedentesOftalmologicos',
  observaciones: 'observaciones'
};

exports.Prisma.ProductoOrderByRelevanceFieldEnum = {
  codigo: 'codigo',
  nombre: 'nombre',
  tipo: 'tipo'
};

exports.Prisma.GarantiaOrderByRelevanceFieldEnum = {
  condiciones: 'condiciones'
};

exports.Prisma.AlertaOrderByRelevanceFieldEnum = {
  mensaje: 'mensaje'
};
exports.CitaEstado = exports.$Enums.CitaEstado = {
  Programada: 'Programada',
  Confirmada: 'Confirmada',
  Atendida: 'Atendida',
  NoShow: 'NoShow',
  Cancelada: 'Cancelada'
};

exports.AlertaTipo = exports.$Enums.AlertaTipo = {
  Control: 'Control',
  Garantia: 'Garantia',
  Operativo: 'Operativo'
};

exports.AlertaCanal = exports.$Enums.AlertaCanal = {
  SMS: 'SMS',
  Correo: 'Correo'
};

exports.Prisma.ModelName = {
  Cliente: 'Cliente',
  Operativo: 'Operativo',
  Usuario: 'Usuario',
  Rol: 'Rol',
  UsuarioRol: 'UsuarioRol',
  Cita: 'Cita',
  FichaClinica: 'FichaClinica',
  Receta: 'Receta',
  Producto: 'Producto',
  Venta: 'Venta',
  ItemVenta: 'ItemVenta',
  Garantia: 'Garantia',
  Alerta: 'Alerta'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
