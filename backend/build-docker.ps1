# Script de construcci√≥n de Docker para Dannig √ìptica Backend (Windows PowerShell)
param(
    [switch]$NoCache,
    [string]$Tag = "dannig-optica-backend"
)

Write-Host "üê≥ Iniciando construcci√≥n de Docker para Backend..." -ForegroundColor Cyan

# Verificar que estamos en el directorio correcto
if (-not (Test-Path "Dockerfile")) {
    Write-Host "‚ùå ERROR: Dockerfile no encontrado. Ejecutar desde el directorio backend/" -ForegroundColor Red
    exit 1
}

# Verificar que los scripts existen
$requiredScripts = @("scripts/validate-env.sh", "scripts/init.sh", "scripts/start-production.sh")
foreach ($script in $requiredScripts) {
    if (-not (Test-Path $script)) {
        Write-Host "‚ùå ERROR: $script no encontrado" -ForegroundColor Red
        exit 1
    }
}

Write-Host "‚úÖ Todos los archivos necesarios encontrados" -ForegroundColor Green

# Limpiar cach√© de Docker si se solicita
if ($NoCache) {
    Write-Host "üßπ Limpiando cach√© de Docker..." -ForegroundColor Yellow
    docker builder prune -f
}

# Construir la imagen
Write-Host "üî® Construyendo imagen Docker..." -ForegroundColor Cyan
$buildArgs = @("build", "-t", $Tag)
if ($NoCache) {
    $buildArgs += "--no-cache"
}
$buildArgs += "."

& docker @buildArgs

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Construcci√≥n completada exitosamente" -ForegroundColor Green
    Write-Host "üìã Para ejecutar el contenedor:" -ForegroundColor Cyan
    Write-Host "   docker run -p 3001:3001 --env-file .env $Tag" -ForegroundColor White
} else {
    Write-Host "‚ùå Error en la construcci√≥n de Docker" -ForegroundColor Red
    exit 1
}
